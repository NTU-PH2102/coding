Andreas Adinatha
U1640056H

Penning Trap Code Read Me:

1. First of all, to run the code, you simply need to press f5(for IDLE-like IDE, e.g. Spyder) or 'Run' button to start the code.

2. Line 1-4, is the command for importing modules containing functions outside the built-in python function.

3. Line 6-17, basically contains all the parameters and constants for the simulation.
	The parameters and constants can be freely changed except d, k1, k2, and k3, since those variables are determined by the other parameters.
	Therefore, the equation for those exception variables should not be changed.

4. Line 19-20, are a the command lines containing the timestep. Timestep is the number of iteration that the animation will do. The higher the number is, the longer your animation will be.
	The smaller it is, the shorter it gets. Setting up the timestep to be very high could result in overflow since after a some iteration, some of the value may reach the max number that
	python can handle. But still it depends on the parameter that you set in the beginning.

5. Line 22-31, are the command lines containing the initial condition of the particle.
	All of those variable's values can be changed freely except, ax0, ay0, and az0.
	Because these 3 variables are derived from the physical law that governs the motion of the Penning trap, and it's determined by the value of other initial condition.
	IMPORTANT: It's strictly prohibited to change the equations for these 3 variables mentioned above.

6. Line 33-54, are the command lines that initializes the variables for plotting and animation. It also contains the iteration formula for calculating the dynamics of the particles.
	It includes position, velocity, and acceleration of the particle.
	IMPORTANT: Any modification to these command lines are stricly prohibited as well, since these lines are related to how the iteration works and to the physical law
	that governs the particle's motion. These lines are the core lines of the code!

7. Line 56-61, are the command lines containing a function that updates that particles trajectory (position, velocity, acceleration).
	This function is the main function that generates the animation.

8. Line 63-127 (last line), are the command lines that are used for setting up all the things related to generated plot later on, such as plot title, axis label, trajectory lines,
	animation lines, figure number, etc.
	In this section, on line 106, 115, 124, do not change the 'lw' value to be larger than 1.5 (if you did, then you may not see the animation since it will overlap with the whole 
	trajectory lines). You can change the 'lw' value to be small enough (default lw = 0.5) to be able to see the whole trajectory alongside with the animation. You can also set the
	'lw' value to be 0 as well, but in return you definitely won't see the whole trajectory unless you wait for the animation to reach the end of the iteration. If you want to change
	the color of the line, then just change the 'color' value to the desired color in the same line stated above.

8. FINALLY, ENJOY THE CODE!

ADDITIONAL NOTES: (PLEASE READ!)
The WriteUp file that is uploaded may not be the same figure that is generated by this code, since there are some changes made after the WriteUp file is submitted
(basically the WriteUp file uses the old version of the code).But, there is no changes in iteration method or any physical equation. I only added some features like autoscaling,
the whole trajectory line w/o animation (before the changes, there only exists the animation line), and the velocity and acceleration figure available in the seperate tab
(Before the changes, there is only 1 figure plotting the position trajectory of the particle, and you need to comment/uncomment and changes some variables in some lines, to plot the velocity
or acceleration of the particle, which is troublesome and prone to do some mistakes). The newer version basically get rids of those unnecessary action to ease the user to use and modify
the code, and it looks better aesthetically for me.

Therefore, the submitted hardcopy code is not exactly the same as the one I uploaded in GitHub. (The previous code is the same as the new code more or less until line 61 of the new code,
the rest of the code is different in consequence of adding some features that forced me to add some more lines to make it happen.)